---
export interface Props {
    latitude: number;
    longitude: number;
    zoom: number;
    /** the DOM ID of a <div> element */
    container: string;
    /** https://leafletjs.com/reference.html#tilelayer */
    tileLayer: string;
    /** Most tile servers require attribution. */
    attribution: string;
    containerstyle?: string;
    points: {
        coordinates: [number, number];
        description: string;
    }[];
}

const {
    latitude,
    longitude,
    zoom,
    container,
    tileLayer,
    attribution,
    containerstyle = 'height: 61.8vh',
    points,
} = Astro.props;
---

<leaflet-map
    data-latitude={latitude}
    data-longitude={longitude}
    data-zoom={zoom}
    data-container={container}
    data-tiles={tileLayer}
    data-attribution={attribution}
    data-containerstyle={containerstyle}
    data-points={JSON.stringify(points)}
>
    <div id={container} style={containerstyle}></div>
    <script>
        // @ts-ignore
        import L from 'leaflet';
        import 'leaflet/dist/leaflet.css';

        class LeafletMap extends HTMLElement {
            constructor() {
                super();

                const latlng = [Number(this.dataset.latitude), Number(this.dataset.longitude)];

                const map = L.map(this.dataset.container, {
                    zoomControl: false,
                }).setView(latlng, Number(this.dataset.zoom));
                L.tileLayer(this.dataset.tiles, { attribution: this.dataset.attribution }).addTo(map);
                map.scrollWheelZoom.disable();
                const greenIcon = L.icon({
                    iconUrl: '/img/pin.png',
                    iconSize: [32, 40],
                    iconAnchor: [16, 45],
                    popupAnchor: [0, -50],
                });

                JSON.parse(this.dataset.points || '[]').forEach((point: any) => {
                    L.marker([point.coordinates[1], point.coordinates[0]], { icon: greenIcon }).addTo(map);
                });
            }
        }

        window.customElements.define('leaflet-map', LeafletMap);
    </script>
</leaflet-map>
